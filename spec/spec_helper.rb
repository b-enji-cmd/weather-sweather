# This file was generated by the `rails generate rspec:install` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# The generated `.rspec` file contains `--require spec_helper` which will cause
# this file to always be loaded, without a need to explicitly require it in any
# files.

def transient_current
  {:lat=>39.7385,
    :lon=>-104.9849,
    :timezone=>"America/Denver",
    :timezone_offset=>-21600,
    :current=>
     {:dt=>1619552432,
      :sunrise=>1619525100,
      :sunset=>1619574586,
      :temp=>284.02,
      :feels_like=>283.28,
      :pressure=>1010,
      :humidity=>81,
      :dew_point=>280.89,
      :uvi=>3.22,
      :clouds=>75,
      :visibility=>10000,
      :wind_speed=>2.13,
      :wind_deg=>317,
      :wind_gust=>3.84,
      :weather=>[{:id=>803, :main=>"Clouds", :description=>"broken clouds", :icon=>"04d"}]}
     }
end

def transient_hourly
  [{:dt=>1619550000,
    :temp=>284.1,
    :feels_like=>283.26,
    :pressure=>1009,
    :humidity=>77,
    :dew_point=>280.23,
    :uvi=>3.46,
    :clouds=>80,
    :visibility=>8938,
    :wind_speed=>2.87,
    :wind_deg=>270,
    :wind_gust=>3.08,
    :weather=>[{:id=>501, :main=>"Rain", :description=>"moderate rain", :icon=>"10d"}],
    :pop=>1,
    :rain=>{:"1h"=>1.15}},
   {:dt=>1619553600,
    :temp=>284.02,
    :feels_like=>283.28,
    :pressure=>1010,
    :humidity=>81,
    :dew_point=>280.89,
    :uvi=>3.22,
    :clouds=>75,
    :visibility=>10000,
    :wind_speed=>2.13,
    :wind_deg=>317,
    :wind_gust=>3.84,
    :weather=>[{:id=>803, :main=>"Clouds", :description=>"broken clouds", :icon=>"04d"}],
    :pop=>0.8},
   {:dt=>1619557200,
    :temp=>284.13,
    :feels_like=>283.29,
    :pressure=>1009,
    :humidity=>77,
    :dew_point=>280.26,
    :uvi=>2.58,
    :clouds=>75,
    :visibility=>10000,
    :wind_speed=>5.17,
    :wind_deg=>29,
    :wind_gust=>4.34,
    :weather=>[{:id=>803, :main=>"Clouds", :description=>"broken clouds", :icon=>"04d"}],
    :pop=>0.8},
   {:dt=>1619560800,
    :temp=>283.95,
    :feels_like=>283.04,
    :pressure=>1008,
    :humidity=>75,
    :dew_point=>279.7,
    :uvi=>2.26,
    :clouds=>74,
    :visibility=>10000,
    :wind_speed=>6.14,
    :wind_deg=>33,
    :wind_gust=>6.18,
    :weather=>[{:id=>500, :main=>"Rain", :description=>"light rain", :icon=>"10d"}],
    :pop=>1,
    :rain=>{:"1h"=>0.27}},
   {:dt=>1619564400,
    :temp=>283.33,
    :feels_like=>282.36,
    :pressure=>1007,
    :humidity=>75,
    :dew_point=>279.1,
    :uvi=>1.23,
    :clouds=>77,
    :visibility=>10000,
    :wind_speed=>4.78,
    :wind_deg=>24,
    :wind_gust=>5.62,
    :weather=>[{:id=>500, :main=>"Rain", :description=>"light rain", :icon=>"10d"}],
    :pop=>1,
    :rain=>{:"1h"=>0.24}}]
end

def transient_daily
  [{:dt=>1619546400,
    :sunrise=>1619525100,
    :sunset=>1619574586,
    :moonrise=>1619578320,
    :moonset=>1619526900,
    :moon_phase=>0.52,
    :temp=>{:day=>285.5, :min=>277.29, :max=>288.53, :night=>277.29, :eve=>282.92, :morn=>283.52},
    :feels_like=>{:day=>284.07, :night=>282.05, :eve=>280.15, :morn=>282.05},
    :pressure=>1007,
    :humidity=>49,
    :dew_point=>275.1,
    :wind_speed=>7.04,
    :wind_deg=>37,
    :wind_gust=>9.24,
    :weather=>[{:id=>502, :main=>"Rain", :description=>"heavy intensity rain", :icon=>"10d"}],
    :clouds=>84,
    :pop=>1,
    :rain=>15.58,
    :uvi=>5.23},
   {:dt=>1619632800,
    :sunrise=>1619611423,
    :sunset=>1619661047,
    :moonrise=>1619669460,
    :moonset=>1619615580,
    :moon_phase=>0.56,
    :temp=>{:day=>283.37, :min=>276.82, :max=>288.63, :night=>283.07, :eve=>288.11, :morn=>278.61},
    :feels_like=>{:day=>281.88, :night=>275.54, :eve=>286.29, :morn=>275.54},
    :pressure=>1015,
    :humidity=>55,
    :dew_point=>274.45,
    :wind_speed=>6.48,
    :wind_deg=>13,
    :wind_gust=>9.7,
    :weather=>[{:id=>501, :main=>"Rain", :description=>"moderate rain", :icon=>"10d"}],
    :clouds=>100,
    :pop=>1,
    :rain=>13.05,
    :uvi=>7.68},
   {:dt=>1619719200,
    :sunrise=>1619697747,
    :sunset=>1619747508,
    :moonrise=>1619760420,
    :moonset=>1619704620,
    :moon_phase=>0.6,
    :temp=>{:day=>288.88, :min=>280.06, :max=>292.05, :night=>286.63, :eve=>291.63, :morn=>280.06},
    :feels_like=>{:day=>287.27, :night=>278.71, :eve=>290.26, :morn=>278.71},
    :pressure=>1022,
    :humidity=>29,
    :dew_point=>270.8,
    :wind_speed=>3.29,
    :wind_deg=>104,
    :wind_gust=>5.28,
    :weather=>[{:id=>800, :main=>"Clear", :description=>"clear sky", :icon=>"01d"}],
    :clouds=>9,
    :pop=>0,
    :uvi=>8.9},
   {:dt=>1619805600,
    :sunrise=>1619784072,
    :sunset=>1619833969,
    :moonrise=>0,
    :moonset=>1619794080,
    :moon_phase=>0.64,
    :temp=>{:day=>295.77, :min=>283.61, :max=>298.68, :night=>293.75, :eve=>298.68, :morn=>283.61},
    :feels_like=>{:day=>294.71, :night=>282.07, :eve=>297.81, :morn=>282.07},
    :pressure=>1017,
    :humidity=>24,
    :dew_point=>274.5,
    :wind_speed=>4.51,
    :wind_deg=>292,
    :wind_gust=>6.91,
    :weather=>[{:id=>800, :main=>"Clear", :description=>"clear sky", :icon=>"01d"}],
    :clouds=>2,
    :pop=>0,
    :uvi=>9.55}]
end
require 'simplecov'
SimpleCov.start
SimpleCov.add_filter ['spec', 'config', '/app/mailers', 'app/jobs', 'app/channels', 'app/controllers/concerns']
# Given that it is always loaded, you are encouraged to keep this file as
# light-weight as possible. Requiring heavyweight dependencies from this file
# will add to the boot time of your test suite on EVERY test run, even for an
# individual file that may not need all of that loaded. Instead, consider making
# a separate helper file that requires the additional dependencies and performs
# the additional setup, and require it from the spec files that actually need
# it.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  # rspec-expectations config goes here. You can use an alternate
  # assertion/expectation library such as wrong or the stdlib/minitest
  # assertions if you prefer.
  config.expect_with :rspec do |expectations|
    # This option will default to `true` in RSpec 4. It makes the `description`
    # and `failure_message` of custom matchers include text for helper methods
    # defined using `chain`, e.g.:
    #     be_bigger_than(2).and_smaller_than(4).description
    #     # => "be bigger than 2 and smaller than 4"
    # ...rather than:
    #     # => "be bigger than 2"
    expectations.include_chain_clauses_in_custom_matcher_descriptions = true
  end

  # rspec-mocks config goes here. You can use an alternate test double
  # library (such as bogus or mocha) by changing the `mock_with` option here.
  config.mock_with :rspec do |mocks|
    # Prevents you from mocking or stubbing a method that does not exist on
    # a real object. This is generally recommended, and will default to
    # `true` in RSpec 4.
    mocks.verify_partial_doubles = true
  end

  # This option will default to `:apply_to_host_groups` in RSpec 4 (and will
  # have no way to turn it off -- the option exists only for backwards
  # compatibility in RSpec 3). It causes shared context metadata to be
  # inherited by the metadata hash of host groups and examples, rather than
  # triggering implicit auto-inclusion in groups with matching metadata.
  config.shared_context_metadata_behavior = :apply_to_host_groups

# The settings below are suggested to provide a good initial experience
# with RSpec, but feel free to customize to your heart's content.
=begin
  # This allows you to limit a spec run to individual examples or groups
  # you care about by tagging them with `:focus` metadata. When nothing
  # is tagged with `:focus`, all examples get run. RSpec also provides
  # aliases for `it`, `describe`, and `context` that include `:focus`
  # metadata: `fit`, `fdescribe` and `fcontext`, respectively.
  config.filter_run_when_matching :focus

  # Allows RSpec to persist some state between runs in order to support
  # the `--only-failures` and `--next-failure` CLI options. We recommend
  # you configure your source control system to ignore this file.
  config.example_status_persistence_file_path = "spec/examples.txt"

  # Limits the available syntax to the non-monkey patched syntax that is
  # recommended. For more details, see:
  #   - http://rspec.info/blog/2012/06/rspecs-new-expectation-syntax/
  #   - http://www.teaisaweso.me/blog/2013/05/27/rspecs-new-message-expectation-syntax/
  #   - http://rspec.info/blog/2014/05/notable-changes-in-rspec-3/#zero-monkey-patching-mode
  config.disable_monkey_patching!

  # Many RSpec users commonly either run the entire suite or an individual
  # file, and it's useful to allow more verbose output when running an
  # individual spec file.
  if config.files_to_run.one?
    # Use the documentation formatter for detailed output,
    # unless a formatter has already been configured
    # (e.g. via a command-line flag).
    config.default_formatter = "doc"
  end

  # Print the 10 slowest examples and example groups at the
  # end of the spec run, to help surface which specs are running
  # particularly slow.
  config.profile_examples = 10

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = :random

  # Seed global randomization in this process using the `--seed` CLI option.
  # Setting this allows you to use `--seed` to deterministically reproduce
  # test failures related to randomization by passing the same `--seed` value
  # as the one that triggered the failure.
  Kernel.srand config.seed
=end
end
require 'webmock/rspec'